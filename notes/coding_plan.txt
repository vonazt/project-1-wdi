OVERVIEW:

1. Create grid
2. Move character around and within grid - basic colour block to start
  2a. Create movement stats for characters
3. Create two teams on grid
  3a. - Create character objects
4. Switch between player 1 and player 2 at end of turn
5. Get collisions working between characters - ie, make sure they can't occupy the same space
6. Detect distance between opposing characters
7. Create HP stats for characters
8. Create DMG stats for characters
9. Allow Attacker to successfully Attack Defender (no minigame)
10. Deplete HP by DMG amount
11. Allow Attacker to kill Defender with Attack (HP === 0)
  11a. Remove Defender from Map
12. Create MP stats for characters
13. Allow Attacker to cast Spell on Defender
14. Deplete Defender's HP by Spell DMG amount
15. Deplete Attacker's MP by Spell Cost amount
16. Allow Attacker to increase HP self with Spell
17. Allow Attacker to increase TeamMate's HP with Spell
18. Create DEF stats for characters
19. Allow Attack to do varying DMG dependent on Defender's DEF stats
20. Create Mini-Games
21. Incorporate Mini-Games into Attack and Magic
22. Create Items
23. Items have to be generated randomly on battlefield every X number of turns
24. Items can either
    - Heal
    - Increase DEF
    - Increase DMG
25. Create Start Screen
26. Create Character Select screen and rosta of sprite characters
27. Write rules
28. Do sound effects
29. Create themed maps

1. Create grid:
  DONE Use arrays to create 10x10 grid
  DONE Make grid appear on html page as set of divs with class "battle-grid" - children of parent div, id="battle-map"
  Set and retrieve grid coordinates
    - return an item at specified coordinate
  DONE Style grid (basic styling)

2. Move character around and within grid:
  DONE Place character (color block) at specific coordinate by specifying position in grid array
  DONE Character will be a div with class "character" - this will be set later according to character objects and constructors
  NECESSARY ? - Character div will also have the class "occupied" to prevent two characters occupying the same space
  DONE Pressing keypads will move character in set direction by changing coordinates on grid
  - WHAT IS THE RELATIONSHIP BETWEEN THE ARRAY COORDINATE AND THE DIV?
  DONE Make sure character can only go to edge of grid
  DONE Create movement stats: character can only move a certain number of spaces in one turn
    DONE How? Limit based on adding Move stat numbers to x, y position.
    STILL TO DO- Create character constructor including name for className designation and move stats - keep both x and y equal for now
    STILL TO DO - Character constructor and objects will be different
    TRIED IT - LOOKS FUNNY ATM Make available move blocks flash using css styling

3. DONE - Put player 2 character on grid - only player 2 for now
  DONEISH - Mirror placement function for player 1.
  STILL TO DO - Create player 2 object - both player 1 and player 2 inherit from player constructor with team set accordingly
  DONE WITH HEAVY REFACTORING NEEDED - Check movement for player 2 - should inherit same movement function as player 1

4. DONE Switch between player 1 and player 2 at end of turn
  Add function to hit enter at end of turn
    - Create pop-up that gives options of Attack, Magic, Item and Wait - all do the same for now which is end turn
    - DONE OR Options display on edge of battlefield window - options light up when available (later functionality)
    - DONE Control then switches to next player
    - HOW?
      DONE - Flag - movement controls only work if player1Turn or player2Turn is set to true - alternates back and forth
      Get this working
      Put both player 1 and player 2 on the grid - give their divs the classes "player 1/2"

5. DONE Make sure no two characters can occupy the same space
  DONE - Every move, check surrounding grid coordinates
    DONE - if one coordinate === occupied, movement key does not work
    DONE Try this and see!

6. DONE Detect distance between player 1 and player 2 characters
  - DONEISH - FOR 1 SPACE, NOT 2 While checking surrounding grid coordinates, should return true if opposing character is within either 1 or 2 grid squares
  - DONE FOR ATTACK Make Attack and Magic options light up in Options display accordingly (no functionality yet)

7. DONE Create HP stats for characters
  - DONE Add HP property to character constructor
  - Display character HP next to character
  - Make stats appear with button press - this should eventually show all character stats on button press
  - OR stats window should be permanently displayed outside of battlefield window dependent on character
    - this will be much easier than pop-up

8. Create DMG stats for character
  - All DMG property to character constructor
  - Display DMG in stats window

9. Allow Attacker to successfully Attack Defender (no Mini-Game)
  - check if Attacker is within one grid space of Defender
    -(display both Attacker and Defender stats in Stats window)
    -if true, then Attack option is available in Options display
    -when Attack is selected, Defender's HP decreases by Attack amount (character.hp -= dmg);
    -change Defender's HP stat and display in Stats window
    - switch control from player 1 to player 2

10. Allow Attacker to kill Defender
  - Attacker Attacks Defender
    - If Defender HP <= 0, Defender dies
    - Display "Attacker killed Defender" in Stats window
    - Remove Defender from Battlefield - hide or remove div

11. Create MP stats for character
  - Add to character constructor - MP and Magic DMG
  - Display in Stats window

12. Create Spells
  - Spell types: Earth, Fire, Wind, Water - different DMG and MP amounts

13. Allow Attack to Cast Spell on Defender
  - check if Attacker is within 2 or less squares of Defender
  - if true, then Magic lights up in Options display
  - when selected, Defender's HP decreases by Magic DMG amount
  - Attacker's MP decreases by Spell Cost amount

14. Allow Attacker to Heal self with Spell
  - If Heal (Wind) is selected, increase HP by Magic DMG amount

15. Allow Attacker to Heal TeamMate with Spell
  - If TeamMate within 2 grid squares, then Heal true
  - Select TeamMate
  - Increase TeamMate HP by Magic DMG amount

16. Create DEF stats for character constructor
  - During Attack, DMG -= DEF

17. Populate Battlefield with multiple characters
 - Assign starting positions
 - Allow option to select which Defender to Attack
 HOW? - check coordinates and return an array of available options
  - display those options
  - allow player to select which Defender to Attack

18. Run full Battle between two sides
  - Check that each aspect functions as it should

(Depending on progress so far)
19. Create Attack minigame
  - Attack minigame: anagram solver
    - Take famous books, films, songs and people and randomise the order
    - Check if player answer === correct answer
    - Set interval of 15 seconds
    - if playerAnswer is correct, then attack successful
  - LOTS TO DO HERE - HOW TO DISPLAY ANAGRAM, SUBMIT BOX, MAKE IT ALL FUNCTION AND TIE IT IN WITH SUCCESSFUL ATTACK

20. Create Magic minigame
  - Display combination of arrows
  - After interval, remove arrows
  - If userAnswer === correctAnswer, Magic successful
  - SEE ABOVE - LOTS TO DO

21. Run through Battle with Attack and Magic minigames

(To be done either immediately after first battle runthrough or after Mini-Games)
22. Create Start Screen
  - Display title, Hit Enter to Start and Rules

23. Create Character Select Screen
  - Create 10 Characters
  - Display Character stats
  - Allow player 1 to pick character
    - store Character in player1 object
  -Switch between player 1 and player 2 select options, populating each respective object with characters

24. Styling
  - Create character models
  - Give everything pixel aesthetic
  - Do Sound Effects

25. Optional extras:
  - Items
  - Special Attacks
